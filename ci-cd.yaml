name: Go Microservice CI/CD

on:
  push:
    branches:
      - dev

env:
  IMAGE_NAME: go-microservice
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Install dependencies
        run: go mod tidy

      - name: Build Go app
        run: go build -v ./...

      - name: Run unit tests
        run: go test -v ./...

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    name: Deploy to Kubernetes with Helm
    runs-on: ubuntu-latest
    needs: docker
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.27.1'

      - name: Decode kubeconfig
        run: echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Upgrade Helm release
        run: |
          helm upgrade --install my-microservice ./charts/my-microservice \
            --set image.repository=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }} \
            --set image.tag=${{ env.IMAGE_TAG }}
